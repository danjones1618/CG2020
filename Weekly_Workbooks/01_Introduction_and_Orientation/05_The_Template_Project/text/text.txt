In order to help get you started, we have provided a sample project called <a href="../../RedNoise/" target="_blank">RedNoise</a>. This project provides the structure that you will need for each weekly workbook, as well as illustrating the use of the _DrawingWindow_ methods. You should use this template as a starting point for each practical exercise. Do be sure to change the name of the project (you don't want to have a bunch of projects all called _RedNoise_ !).

In order to help you compile, link and run your code, a Makefile has been provided as part of the template project. Be sure you update the `PROJECT_NAME` on the first line of the Makefile to match the name of your project/main class each week. This Makefile has multiple build rules for different purposes:

- debug: A development build rule that will compile and link your project for use with a debugger (gdb)
- diagnostic: A development build rule that includes extra memory checking and diagnosis flags.  
Note: this rule requires the [Address Sanitizer](https://clang.llvm.org/docs/AddressSanitizer.html) library to be installed (which comes built-in with some C++ compilers)
- speedy: A build rule that will result in a high performance executable (to make interaction testing quicker)
- production: A build rule to make an executable without debug hooks (for release or distribution)

Just typing `make` on its own will build the _debug_ rule and run the resultant executable.  

When you successfully build and run the _RedNoise_ project you should see a window that looks like the following...